{"version":3,"sources":["../src/pixel-flow.js","scripts/index.mjs"],"names":["evenNum","num","NaN","convPerc","percentage","Number","replace","defaultOptions","resolution","offsetX","offsetY","PixelFlow","img","options","HTMLImageElement","window","console","error","Object","assign","setUpCanvas","drawPixels","parentNode","replaceChild","canvas","err","build","opts","prototype","drawCol","left","colWidth","pixHeight","w","width","h","height","res","resH","offestX","rows","row","x","y","pixelY","pixelX","pixelIndex","Math","max","min","drawPixel","ctx","imgData","red","green","blue","alpha","pixelAlpha","fillStyle","fillRect","size","cols","halfSize","rebase","col","linearGradient","location","Array","isArray","length","startRes","endRes","startPoint","gradStart","gradEnd","endPoint","push","addColRange","arr","leftStart","startWidth","endWidth","rightEnd","place","Rl","Rs","t","cWidth","exp","c","drawImage","document","createElement","getContext","_copyCanvas","_copyCtx","className","id","naturalWidth","naturalHeight","getImageData","data","clearRect","simpleanimate","endResolution","duration","er","startTime","Date","now","elapsed","dur","PixelFlowAnimationLoop","time","update","requestAnimationFrame","bind","domReady","Promise","resolve","readyState","readystate","then","addEventListener","waitForImage","reject","imgObj","Image","onload","onerror","src","runAnimation","tick","start","ticker","completionRatio","easeOutQuad","easeInOutQuad","ratio","runGradientAnimation","pixelFlow","startOffsetX","ratioComplete","round","runWaveAnimation","optionsLeft","optionsRight","offsetMultiplier","abs","pixelFlows","transformOptions","lg","wg","buttonListener","index","event","button","target","requestedTransform","dataset","func","images","from","querySelectorAll","all","map","imageWrappers","i","imgWrap","buttons","getElementsByTagName","forEach","b"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;AASA,cAEA;;;;;;;AACA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B,OAAOC,GAAP;AAC7B,SAAO,CAAC,CAACD,GAAF,GAAS,CAAC,CAACA,GAAF,GAAQ,CAAxB;AACD;;AAED,SAASE,QAAT,CAAkBC,UAAlB,EAA8B;AAC5B,SAAOC,MAAM,CAACD,UAAU,CAACE,OAAX,CAAmB,QAAnB,EAA6B,EAA7B,CAAD,CAAN,GAA2C,GAAlD;AACD;;AAED,IAAIC,cAAc,GAAG;AACnBC,EAAAA,UAAU,EAAE,EADO;AAEnBC,EAAAA,OAAO,EAAE,CAFU;AAGnBC,EAAAA,OAAO,EAAE;AAGX;;;;;AANqB,CAArB;;AAUA,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,OAAxB,EAAiC;AAC/B,MAAI,EAAED,GAAG,YAAYE,gBAAjB,CAAJ,EACE,OACEC,MAAM,CAACC,OAAP,IACAA,OAAO,CAACC,KAAR,CAAc,kDAAd,CAFF;AAKF,OAAKJ,OAAL,GAAeK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBZ,cAAlB,EAAkCM,OAAlC,CAAf;AAEA,OAAKD,GAAL,GAAWA,GAAX;;AAEA,MAAI;AACF,SAAKQ,WAAL,CAAiBR,GAAjB;AAEA,SAAKS,UAAL,GAHE,CAKF;;AACAT,IAAAA,GAAG,CAACU,UAAJ,CAAeC,YAAf,CAA4B,KAAKC,MAAjC,EAAyCZ,GAAzC;AACD,GAPD,CAOE,OAAOa,GAAP,EAAY;AACZV,IAAAA,MAAM,CAACC,OAAP,IAAkBA,OAAO,CAACC,KAAR,CAAc,qCAAd,CAAlB;AACAF,IAAAA,MAAM,CAACC,OAAP,IAAkBA,OAAO,CAACC,KAAR,CAAcQ,GAAd,CAAlB;AACD;AACF;AAED;;;;;;;;AAMAd,SAAS,CAACe,KAAV,GAAkB,UAASd,GAAT,EAAce,IAAd,EAAoB;AACpC,SAAO,IAAIhB,SAAJ,CAAcC,GAAd,EAAmBe,IAAnB,CAAP;AACD,CAFD;AAIA;;;;;;;;;AAOAhB,SAAS,CAACiB,SAAV,CAAoBC,OAApB,GAA8B,UAASC,IAAT,EAAeC,QAAf,EAAyBC,SAAzB,EAAoC;AAChE,MAAID,QAAQ,IAAI,CAAZ,IAAiBC,SAAS,IAAI,CAAlC,EAAqC;AACrC,MAAIF,IAAI,GAAGC,QAAP,GAAkB,CAAtB,EAAyB,OAFuC,CAGhE;;AACA,MAAIE,CAAC,GAAG,KAAKC,KAAb;AACA,MAAIC,CAAC,GAAG,KAAKC,MAAb;AACA,MAAIvB,OAAO,GAAG,KAAKA,OAAnB;AACA,MAAIwB,GAAG,GAAGN,QAAV;AACA,MAAIO,IAAI,GAAGN,SAAS,IAAIK,GAAxB;AACA,MAAI5B,OAAO,GAAGI,OAAO,CAAC0B,OAAtB;AACA,MAAI7B,OAAO,GAAGG,OAAO,CAACH,OAAtB;AACA,MAAI8B,IAAI,GAAGL,CAAC,GAAGG,IAAJ,GAAW,CAAtB;AAEA,MAAIG,GAAJ;AACA,MAAIC,CAAC,GAAGZ,IAAI,IAAI,CAAhB;AACA,MAAIa,CAAJ;AACA,MAAIC,MAAJ;AACA,MAAIC,MAAJ;AACA,MAAIC,UAAJ,CAlBgE,CAoBhE;;AACA,MAAIJ,CAAC,GAAGL,GAAJ,IAAW,CAAX,IAAgBK,CAAC,IAAIT,CAAzB,EAA4B,OArBoC,CAsBhE;;AACAY,EAAAA,MAAM,GAAGE,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASP,CAAT,EAAYT,CAAC,GAAG,CAAhB,CAAT,EAA6B,CAA7B,CAAT;;AAEA,OAAKQ,GAAG,GAAG,CAAX,EAAcA,GAAG,GAAGD,IAApB,EAA0BC,GAAG,EAA7B,EAAiC;AAC/BE,IAAAA,CAAC,GAAG,CAACF,GAAG,GAAG,GAAP,IAAcH,IAAd,GAAqB5B,OAAzB,CAD+B,CAE/B;;AACAkC,IAAAA,MAAM,GAAGG,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASN,CAAT,EAAYR,CAAC,GAAG,CAAhB,CAAT,EAA6B,CAA7B,CAAT;AAEAW,IAAAA,UAAU,GAAG,CAACD,MAAM,GAAGD,MAAM,GAAGX,CAAnB,IAAwB,CAArC;AAEA,SAAKiB,SAAL,CAAeJ,UAAf,EAA2BJ,CAA3B,EAA8BC,CAA9B,EAAiCN,GAAjC,EAAsCC,IAAtC;AACD;AACF,CAlCD;AAoCA;;;;;;;;;;;AASA3B,SAAS,CAACiB,SAAV,CAAoBsB,SAApB,GAAgC,UAASJ,UAAT,EAAqBJ,CAArB,EAAwBC,CAAxB,EAA2BV,CAA3B,EAA8BE,CAA9B,EAAiC;AAC/D,MAAIgB,GAAG,GAAG,KAAKA,GAAf;AAAA,MACEC,OAAO,GAAG,KAAKA,OADjB;AAAA,MAEEC,GAAG,GAAGD,OAAO,CAACN,UAAD,CAFf;AAAA,MAGEQ,KAAK,GAAGF,OAAO,CAACN,UAAU,GAAG,CAAd,CAHjB;AAAA,MAIES,IAAI,GAAGH,OAAO,CAACN,UAAU,GAAG,CAAd,CAJhB;AAAA,MAKEU,KAAK,GAAG,CALV;AAAA,MAMEC,UAAU,GAAGD,KAAK,IAAIJ,OAAO,CAACN,UAAU,GAAG,CAAd,CAAP,GAA0B,GAA9B,CANpB,CAD+D,CAS/D;;AACAK,EAAAA,GAAG,CAACO,SAAJ,GACE,UAAUL,GAAV,GAAgB,GAAhB,GAAsBC,KAAtB,GAA8B,GAA9B,GAAoCC,IAApC,GAA2C,GAA3C,GAAiDE,UAAjD,GAA8D,GADhE,CAV+D,CAa/D;;AACAN,EAAAA,GAAG,CAACQ,QAAJ,CAAajB,CAAb,EAAgBC,CAAhB,EAAmBV,CAAnB,EAAsBE,CAAtB;AAEA,SAAO,IAAP;AACD,CAjBD;AAmBA;;;;;;;AAKAxB,SAAS,CAACiB,SAAV,CAAoBP,UAApB,GAAiC,UAASR,OAAT,EAAkB;AACjD;AACAA,EAAAA,OAAO,GAAGK,MAAM,CAACC,MAAP,CAAc,KAAKN,OAAnB,EAA4BA,OAA5B,CAAV;AACA,MAAIoB,CAAC,GAAG,KAAKC,KAAb;AAAA,MACEC,CAAC,GAAG,KAAKC,MADX;AAAA,MAEEe,GAAG,GAAG,KAAKA,GAFb;AAAA,MAGEC,OAAO,GAAG,KAAKA,OAHjB;AAAA,MAIEf,GAAG,GAAGxB,OAAO,CAACL,UAJhB;AAAA,MAKEoD,IAAI,GAAG/C,OAAO,CAAC+C,IAAR,IAAgBvB,GALzB;AAAA,MAMEmB,KAAK,GAAG,CANV;AAAA,MAOE/C,OAAO,GAAGI,OAAO,CAACJ,OAPpB;AAAA,MAQEC,OAAO,GAAGG,OAAO,CAACH,OARpB;AAAA,MASEmD,IAAI,GAAG5B,CAAC,GAAGI,GAAJ,GAAU,CATnB;AAAA,MAUEG,IAAI,GAAGL,CAAC,GAAGE,GAAJ,GAAU,CAVnB;AAAA,MAWEyB,QAAQ,GAAGF,IAAI,GAAG,CAXpB;AAaA,MAAIvB,GAAG,GAAG,CAAV,EAAa,OAAO,KAAK0B,MAAL,EAAP;AAEb,MAAItB,GAAJ,EAASuB,GAAT,EAActB,CAAd,EAAiBC,CAAjB,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDO,GAAhD,EAAqDC,KAArD,EAA4DC,IAA5D,EAAkEE,UAAlE;;AAEA,OAAKhB,GAAG,GAAG,CAAX,EAAcA,GAAG,GAAGD,IAApB,EAA0BC,GAAG,EAA7B,EAAiC;AAC/BE,IAAAA,CAAC,GAAG,CAACF,GAAG,GAAG,GAAP,IAAcJ,GAAd,GAAoB3B,OAAxB,CAD+B,CAE/B;;AACAkC,IAAAA,MAAM,GAAGG,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASN,CAAT,EAAYR,CAAC,GAAG,CAAhB,CAAT,EAA6B,CAA7B,CAAT;;AAEA,SAAK6B,GAAG,GAAG,CAAX,EAAcA,GAAG,GAAGH,IAApB,EAA0BG,GAAG,EAA7B,EAAiC;AAC/BtB,MAAAA,CAAC,GAAG,CAACsB,GAAG,GAAG,GAAP,IAAc3B,GAAd,GAAoB5B,OAAxB,CAD+B,CAE/B;;AACAoC,MAAAA,MAAM,GAAGE,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASP,CAAT,EAAYT,CAAC,GAAG,CAAhB,CAAT,EAA6B,CAA7B,CAAT;AACAa,MAAAA,UAAU,GAAG,CAACD,MAAM,GAAGD,MAAM,GAAGX,CAAnB,IAAwB,CAArC;AACAoB,MAAAA,GAAG,GAAGD,OAAO,CAACN,UAAU,GAAG,CAAd,CAAb;AACAQ,MAAAA,KAAK,GAAGF,OAAO,CAACN,UAAU,GAAG,CAAd,CAAf;AACAS,MAAAA,IAAI,GAAGH,OAAO,CAACN,UAAU,GAAG,CAAd,CAAd;AACAW,MAAAA,UAAU,GAAGD,KAAK,IAAIJ,OAAO,CAACN,UAAU,GAAG,CAAd,CAAP,GAA0B,GAA9B,CAAlB;AAEAK,MAAAA,GAAG,CAACO,SAAJ,GACE,UAAUL,GAAV,GAAgB,GAAhB,GAAsBC,KAAtB,GAA8B,GAA9B,GAAoCC,IAApC,GAA2C,GAA3C,GAAiDE,UAAjD,GAA8D,GADhE,CAV+B,CAa/B;;AACAN,MAAAA,GAAG,CAACQ,QAAJ,CAAajB,CAAC,GAAGoB,QAAjB,EAA2BnB,CAAC,GAAGmB,QAA/B,EAAyCF,IAAzC,EAA+CA,IAA/C;AACD,KApB8B,CAoB7B;;AACH,GAzCgD,CAyC/C;;;AAEF,SAAO,IAAP;AACD,CA5CD;AA8CA;;;;;;;;;;;;;;;;;AAeAjD,SAAS,CAACiB,SAAV,CAAoBqC,cAApB,GAAqC,UAASpD,OAAT,EAAkB;AACrD;AACAA,EAAAA,OAAO,GAAGK,MAAM,CAACC,MAAP,CACR,EADQ,EAER,KAAKN,OAFG,EAGR;AAAEqD,IAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,IAAJ,EAAU,IAAV,EAAgB,CAAhB,CAAZ;AAAgC1D,IAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,CAAL,CAA5C;AAAqDuD,IAAAA,MAAM,EAAE;AAA7D,GAHQ,EAIRlD,OAJQ,CAAV;AAOA,MAAIA,OAAO,CAACkD,MAAZ,EAAoB,KAAKA,MAAL,GATiC,CAUrD;;AACA,OAAKlD,OAAL,GAAeA,OAAf;;AAEA,MACE,CAACsD,KAAK,CAACC,OAAN,CAAcvD,OAAO,CAACqD,QAAtB,CAAD,IACA,CAACC,KAAK,CAACC,OAAN,CAAcvD,OAAO,CAACL,UAAtB,CADD,IAEAK,OAAO,CAACqD,QAAR,CAAiBG,MAAjB,GAA0B,CAF1B,IAGAxD,OAAO,CAACL,UAAR,CAAmB6D,MAAnB,GAA4B,CAJ9B,EAKE;AACAtD,IAAAA,MAAM,CAACC,OAAP,IACEA,OAAO,CAACC,KAAR,CACE,oEADF,CADF;AAIA,WAAO,IAAP;AACD;;AAED,MAAIqD,QAAQ,GAAGtE,OAAO,CAACa,OAAO,CAACL,UAAR,CAAmB,CAAnB,CAAD,CAAtB;AAAA,MACE+D,MAAM,GAAGvE,OAAO,CAACa,OAAO,CAACL,UAAR,CAAmB,CAAnB,CAAD,CADlB;AAAA,MAEEgE,UAAU,GAAG3D,OAAO,CAACqD,QAAR,CAAiB,CAAjB,KAAuB,CAFtC;AAAA,MAGEO,SAAS,GAAG5D,OAAO,CAACqD,QAAR,CAAiB,CAAjB,KAAuB,IAHrC;AAAA,MAIEQ,OAAO,GAAG7D,OAAO,CAACqD,QAAR,CAAiB,CAAjB,KAAuB,IAJnC;AAAA,MAKES,QAAQ,GAAG9D,OAAO,CAACqD,QAAR,CAAiB,CAAjB,KAAuB,CALpC;AAAA,MAMEzD,OAAO,GAAGI,OAAO,CAACJ,OAAR,IAAmB,KAAKA,OAAxB,IAAmC,CAN/C;AAQA,MAAI,OAAO+D,UAAP,KAAsB,QAA1B,EAAoCA,UAAU,GAAGrE,QAAQ,CAACqE,UAAD,CAArB;AACpC,MAAI,OAAOC,SAAP,KAAqB,QAAzB,EAAmCA,SAAS,GAAGtE,QAAQ,CAACsE,SAAD,CAApB;AACnC,MAAI,OAAOC,OAAP,KAAmB,QAAvB,EAAiCA,OAAO,GAAGvE,QAAQ,CAACuE,OAAD,CAAlB;AACjC,MAAI,OAAOC,QAAP,KAAoB,QAAxB,EAAkCA,QAAQ,GAAGxE,QAAQ,CAACwE,QAAD,CAAnB,CArCmB,CAuCrD;;AACA,MAAI1C,CAAC,GAAG,KAAKC,KAAb,CAxCqD,CA0CrD;;AACAsC,EAAAA,UAAU,IAAIvC,CAAd;AACAwC,EAAAA,SAAS,IAAIxC,CAAb;AACAyC,EAAAA,OAAO,IAAIzC,CAAX;AACA0C,EAAAA,QAAQ,IAAI1C,CAAZ;AAEA,MAAI4B,IAAI,GAAG,EAAX;AACA,MAAIS,QAAQ,GAAG,CAAf,EAAkBT,IAAI,CAACe,IAAL,CAAU5E,OAAO,CAACwE,UAAD,CAAjB,EAjDmC,CAmDrD;AACA;AACA;AAEA;AACA;;AACA,WAASK,WAAT,CAAqBC,GAArB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,QAAjD,EAA2DC,QAA3D,EAAqE;AACnE,QAAIA,QAAQ,GAAGH,SAAf,EAA0B;;AAE1B,QAAIC,UAAU,KAAKC,QAAnB,EAA6B;AAC3B,UAAID,UAAU,KAAK,CAAnB,EAAsB;AAEtB,UAAIG,KAAK,GAAGJ,SAAZ;;AACA,aAAOI,KAAK,IAAID,QAAhB,EAA0B;AACxBC,QAAAA,KAAK,IAAIH,UAAT;AACAnB,QAAAA,IAAI,CAACe,IAAL,CAAU5E,OAAO,CAACmF,KAAD,CAAjB,EAFwB,CAEE;AAC3B;AACF,KARD,MAQO;AACL,UAAIC,EAAE,GAAGJ,UAAU,IAAI,CAAvB,CADK,CACoB;;AACzB,UAAIK,EAAE,GAAGJ,QAAQ,IAAI,CAArB;AACA,UAAIK,CAAC,GAAGJ,QAAQ,GAAGH,SAAnB,CAHK,CAIL;AACA;AAEA;AACA;;AACA,UAAII,KAAK,GAAGJ,SAAZ;AACA,UAAIQ,MAAM,GAAGP,UAAb;AACA,UAAIQ,GAAJ;;AAEA,SAAG;AACD;AACA;AACAA,QAAAA,GAAG,GAAGJ,EAAE,GAAG,CAACA,EAAE,GAAGC,EAAN,KAAa,CAACF,KAAK,GAAGJ,SAAT,IAAsBO,CAAnC,CAAX;AACAC,QAAAA,MAAM,GAAGC,GAAT;AACAL,QAAAA,KAAK,IAAInF,OAAO,CAACuF,MAAD,CAAhB;AACA1B,QAAAA,IAAI,CAACe,IAAL,CAAU5E,OAAO,CAACmF,KAAD,CAAjB;AACD,OAPD,QAOSA,KAAK,IAAID,QAAT,IAAqBK,MAAM,IAAI,CAPxC;AAQD;AACF,GA1FoD,CA2FrD;;;AACAV,EAAAA,WAAW,CAAChB,IAAD,EAAOW,UAAP,EAAmBF,QAAnB,EAA6BA,QAA7B,EAAuCG,SAAvC,CAAX;AACAI,EAAAA,WAAW,CACThB,IADS,EAETA,IAAI,CAACA,IAAI,CAACQ,MAAL,GAAc,CAAf,CAAJ,IAAyBI,SAFhB,EAGTH,QAHS,EAITC,MAJS,EAKTG,OALS,CAAX;AAOAG,EAAAA,WAAW,CAAChB,IAAD,EAAOA,IAAI,CAACA,IAAI,CAACQ,MAAL,GAAc,CAAf,CAAX,EAA8BE,MAA9B,EAAsCA,MAAtC,EAA8CI,QAA9C,CAAX;;AAEA,OAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG5B,IAAI,CAACQ,MAAzB,EAAiCoB,CAAC,EAAlC,EAAsC;AACpC,SAAK5D,OAAL,CAAagC,IAAI,CAAC4B,CAAC,GAAG,CAAL,CAAJ,GAAchF,OAA3B,EAAoCoD,IAAI,CAAC4B,CAAD,CAAJ,GAAU5B,IAAI,CAAC4B,CAAC,GAAG,CAAL,CAAlD;AACD;;AAED,SAAO,IAAP;AACD,CA3GD;AA6GA;;;;;;AAIA9E,SAAS,CAACiB,SAAV,CAAoBmC,MAApB,GAA6B,YAAW;AACtC,OAAKlD,OAAL,GAAe;AACbL,IAAAA,UAAU,EAAE,CADC;AAEbC,IAAAA,OAAO,EAAE,CAFI;AAGbC,IAAAA,OAAO,EAAE;AAHI,GAAf;AAMA,OAAKyC,GAAL,CAASuC,SAAT,CAAmB,KAAK9E,GAAxB,EAA6B,CAA7B,EAAgC,CAAhC;AAEA,SAAO,IAAP;AACD,CAVD;AAYA;;;;;;;;AAMAD,SAAS,CAACiB,SAAV,CAAoBR,WAApB,GAAkC,UAASR,GAAT,EAAc;AAC9C;AACA,MAAIY,MAAM,GAAI,KAAKA,MAAL,GAAcmE,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAA5B;AACA,OAAKzC,GAAL,GAAW3B,MAAM,CAACqE,UAAP,CAAkB,IAAlB,CAAX,CAH8C,CAK9C;;AACA,OAAKC,WAAL,GAAmBH,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAnB;AACA,OAAKG,QAAL,GAAgB,KAAKD,WAAL,CAAiBD,UAAjB,CAA4B,IAA5B,CAAhB,CAP8C,CAS9C;;AACArE,EAAAA,MAAM,CAACwE,SAAP,GAAmBpF,GAAG,CAACoF,SAAvB;AACAxE,EAAAA,MAAM,CAACyE,EAAP,GAAYrF,GAAG,CAACqF,EAAhB;AAEA,MAAIhE,CAAC,GAAI,KAAKC,KAAL,GAAa,KAAKV,MAAL,CAAYU,KAAZ,GAAoB,KAAK4D,WAAL,CAAiB5D,KAAjB,GACxCtB,GAAG,CAACsF,YAAJ,GAAmB,CAAnB,KAAyB,CAAzB,GAA6BtF,GAAG,CAACsF,YAAjC,GAAgDtF,GAAG,CAACsF,YAAJ,GAAmB,CADrE;AAEA,MAAI/D,CAAC,GAAI,KAAKC,MAAL,GAAc,KAAKZ,MAAL,CAAYY,MAAZ,GAAqB,KAAK0D,WAAL,CAAiB1D,MAAjB,GAC1CxB,GAAG,CAACuF,aAAJ,GAAoB,CAApB,KAA0B,CAA1B,GAA8BvF,GAAG,CAACuF,aAAlC,GAAkDvF,GAAG,CAACuF,aAAJ,GAAoB,CADxE,CAf8C,CAkB9C;;AACA,OAAKhD,GAAL,CAASuC,SAAT,CAAmB9E,GAAnB,EAAwB,CAAxB,EAA2B,CAA3B;;AACA,OAAKmF,QAAL,CAAcL,SAAd,CAAwB9E,GAAxB,EAA6B,CAA7B,EAAgC,CAAhC;;AAEA,OAAKwC,OAAL,GAAe,KAAK2C,QAAL,CAAcK,YAAd,CAA2B,CAA3B,EAA8B,CAA9B,EAAiCnE,CAAjC,EAAoCE,CAApC,EAAuCkE,IAAtD;AAEA,OAAKlD,GAAL,CAASmD,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,EAAyBrE,CAAzB,EAA4BE,CAA5B;AAEA,SAAO,IAAP;AACD,CA3BD;AA6BA;;;;;;;AAKAxB,SAAS,CAACiB,SAAV,CAAoB2E,aAApB,GAAoC,UAASC,aAAT,EAAwBC,QAAxB,EAAkC;AACpE,MAAIC,EAAE,GAAG1G,OAAO,CAACwG,aAAD,CAAhB,CADoE,CAEpE;;AACA,MAAI,KAAK3F,OAAL,CAAaL,UAAb,KAA4BkG,EAAhC,EAAoC;AACpC,MAAIpC,QAAQ,GAAG,KAAKzD,OAAL,CAAaL,UAA5B;AACA,MAAI6B,GAAG,GAAGiC,QAAV;AACA,MAAIqC,SAAS,GAAGC,IAAI,CAACC,GAAL,EAAhB;AACA,MAAIC,OAAO,GAAG,CAAd;AACA,MAAIC,GAAG,GAAGN,QAAV;;AAEA,MAAIO,sBAAsB,GAAG,YAAW;AACtC,QAAIC,IAAI,GAAGL,IAAI,CAACC,GAAL,EAAX;AAEAxE,IAAAA,GAAG,GAAGiC,QAAQ,GAAG,CAACoC,EAAE,GAAGpC,QAAN,KAAmB,CAAC2C,IAAI,GAAGN,SAAR,IAAqBF,QAAxC,CAAjB;AAEApE,IAAAA,GAAG,GAAGrC,OAAO,CAACqC,GAAD,CAAb;;AAEA,QAAIA,GAAG,IAAI,CAAX,EAAc;AACZ;AACA;AACA,UAAI,KAAKxB,OAAL,CAAaL,UAAb,KAA4B6B,GAAhC,EAAqC;AACnC,aAAK6E,MAAL,CAAY;AAAE1G,UAAAA,UAAU,EAAER,OAAO,CAACqC,GAAD;AAArB,SAAZ;AACD;AACF,KAND,MAMO;AACL,WAAK0B,MAAL,CAAY,EAAZ;AACD;;AAED,QAAK2C,EAAE,GAAGpC,QAAL,IAAiBjC,GAAG,GAAGqE,EAAxB,IAAgCA,EAAE,GAAGpC,QAAL,IAAiBjC,GAAG,GAAGqE,EAA3D,EAAgE;AAC9D3F,MAAAA,MAAM,CAACoG,qBAAP,CAA6BH,sBAA7B;AACD;AACF,GApB4B,CAoB3BI,IApB2B,CAoBtB,IApBsB,CAA7B;;AAsBArG,EAAAA,MAAM,CAACoG,qBAAP,CAA6BH,sBAA7B;AAEA,SAAO,IAAP;AACD,CAnCD;AAqCA;;;;;;;AAKArG,SAAS,CAACiB,SAAV,CAAoBsF,MAApB,GAA6B,UAASrG,OAAT,EAAkB;AAC7CK,EAAAA,MAAM,CAACC,MAAP,CAAc,KAAKN,OAAnB,EAA4BA,OAA5B;AAEA,OAAKA,OAAL,CAAaL,UAAb,GAA0BR,OAAO,CAAC,KAAKa,OAAL,CAAaL,UAAd,CAAjC;AAEA,OAAKa,UAAL;AAEA,SAAO,IAAP;AACD,CARD;;eAUeV;;;;;ACnaf;;;;;;;;;;;;AAEA,SAAS0G,QAAT,GAAoB;AAClB,SAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC5B,QACE5B,QAAQ,CAAC6B,UAAT,KAAwB,aAAxB,IACA7B,QAAQ,CAAC8B,UAAT,KAAwB,WAF1B,EAGE;AACAH,MAAAA,OAAO,CAACC,OAAR,GAAkBG,IAAlB,CAAuBH,OAAvB;AACD,KALD,MAKO;AACL5B,MAAAA,QAAQ,CAACgC,gBAAT,CAA0B,kBAA1B,EAA8C;AAAA,eAAMJ,OAAO,EAAb;AAAA,OAA9C;AACD;AACF,GATM,CAAP;AAUD;;AAED,SAASK,YAAT,CAAsBhH,GAAtB,EAA2B;AACzB,SAAO,IAAI0G,OAAJ,CAAY,UAASC,OAAT,EAAkBM,MAAlB,EAA0B;AAC3C,QAAIC,MAAM,GAAG,IAAIC,KAAJ,EAAb;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,YAAW;AACzBT,MAAAA,OAAO,CAAC3G,GAAD,CAAP;AACD,KAFD;;AAGAkH,IAAAA,MAAM,CAACG,OAAP,GAAiB,YAAW;AAC1BJ,MAAAA,MAAM;AACP,KAFD;;AAGAC,IAAAA,MAAM,CAACI,GAAP,GAAatH,GAAG,CAACsH,GAAjB;AACD,GATM,CAAP;AAUD;;AAED,SAASC,YAAT,CAAsBC,IAAtB,EAA4B3B,QAA5B,EAAsC;AACpCA,EAAAA,QAAQ,GAAGA,QAAQ,GAAG,IAAtB;AACA,MAAM4B,KAAK,GAAGzB,IAAI,CAACC,GAAL,EAAd;;AACA,WAASyB,MAAT,GAAkB;AAChB,QAAMzB,GAAG,GAAGD,IAAI,CAACC,GAAL,EAAZ;AACA,QAAM0B,eAAe,GAAG,CAAC1B,GAAG,GAAGwB,KAAP,IAAgB5B,QAAxC;;AACA,QAAI8B,eAAe,IAAI,CAAvB,EAA0B;AACxBH,MAAAA,IAAI,CAAC,CAAD,CAAJ;AACD,KAFD,MAEO;AACLA,MAAAA,IAAI,CAACG,eAAD,CAAJ;AACAxH,MAAAA,MAAM,CAACoG,qBAAP,CAA6BmB,MAA7B;AACD;AACF;;AACDvH,EAAAA,MAAM,CAACoG,qBAAP,CAA6BmB,MAA7B;AACD;;AAED,SAASE,WAAT,CAAqBlD,CAArB,EAAwB;AACtB,SAAOA,CAAC,IAAI,IAAIA,CAAR,CAAR;AACD;;AAED,SAASmD,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,SAAOA,KAAK,GAAG,GAAR,GAAc,IAAIA,KAAJ,GAAYA,KAA1B,GAAkC,CAAC,CAAD,GAAK,CAAC,IAAI,IAAIA,KAAT,IAAkBA,KAAhE;AACD;;AAED,SAASC,oBAAT,CAA8BC,SAA9B,EAAyC/H,OAAzC,EAAkD;AAChD,MAAMgI,YAAY,GAAGD,SAAS,CAAC1G,KAA/B;AACAiG,EAAAA,YAAY,CAAC,UAAAW,aAAa,EAAI;AAC5B,QAAMrI,OAAO,GAAGsC,IAAI,CAACgG,KAAL,CACdF,YAAY,GAAGA,YAAY,GAAGL,WAAW,CAACM,aAAD,CAD3B,CAAhB;AAGAF,IAAAA,SAAS,CAAC3E,cAAV,CAAyB/C,MAAM,CAACC,MAAP,CAAc;AAAEV,MAAAA,OAAO,EAAPA;AAAF,KAAd,EAA2BI,OAA3B,CAAzB;AACD,GALW,EAKT,CALS,CAAZ;AAMD,EAED;;;AACA,SAASmI,gBAAT,CAA0BJ,SAA1B,QAAkE;AAAA;AAAA,MAA5BK,WAA4B;AAAA,MAAfC,YAAe;;AAChE,MAAMhH,KAAK,GAAG0G,SAAS,CAAC1G,KAAxB;AACAiG,EAAAA,YAAY,CAAC,UAAAW,aAAa,EAAI;AAC5B,QAAMK,gBAAgB,GAAG,CAACV,aAAa,CAAC1F,IAAI,CAACqG,GAAL,CAASN,aAAa,GAAG,GAAzB,IAAgC,CAAjC,CAAvC;AACA,QAAMrI,OAAO,GAAGsC,IAAI,CAACgG,KAAL,CAAW7G,KAAK,GAAGiH,gBAAnB,CAAhB;AACAP,IAAAA,SAAS,CAAC3E,cAAV,CAAyB/C,MAAM,CAACC,MAAP,CAAc;AAAEV,MAAAA,OAAO,EAAPA;AAAF,KAAd,EAA2BwI,WAA3B,CAAzB;AACAL,IAAAA,SAAS,CAAC3E,cAAV,CAAyB/C,MAAM,CAACC,MAAP,CAAc;AAAEV,MAAAA,OAAO,EAAPA;AAAF,KAAd,EAA2ByI,YAA3B,CAAzB;AACD,GALW,EAKT,CALS,CAAZ;AAMD;;AAED,CAAE,YAAW;AACX,MAAIG,UAAJ;AACA,MAAIC,gBAAgB,GAAG,CACrB;AACErF,IAAAA,cAAc,EAAE;AAAEC,MAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,IAAP,EAAa,CAAb,CAAZ;AAA6B1D,MAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,CAAL;AAAzC,KADlB;AAEEa,IAAAA,UAAU,EAAE;AAAEb,MAAAA,UAAU,EAAE,EAAd;AAAkBE,MAAAA,OAAO,EAAE;AAA3B,KAFd;AAGE6I,IAAAA,EAAE,EAAE;AAAErF,MAAAA,QAAQ,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,IAAR,EAAc,CAAd;AAAZ,KAHN;AAIEsF,IAAAA,EAAE,EAAE,CACF;AAAEtF,MAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,GAAP,EAAY,CAAZ,EAAe,CAAf,CAAZ;AAA+B1D,MAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,CAAL;AAA3C,KADE,EAEF;AAAE0D,MAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAiB,IAAjB,CAAZ;AAAoC1D,MAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAhD;AAAyDuD,MAAAA,MAAM,EAAE;AAAjE,KAFE;AAJN,GADqB,EAUrB;AACEE,IAAAA,cAAc,EAAE;AAAEC,MAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,CAAd,CAAZ;AAA8B1D,MAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,CAAL;AAA1C,KADlB;AAEEa,IAAAA,UAAU,EAAE;AAAEb,MAAAA,UAAU,EAAE;AAAd,KAFd;AAGE+I,IAAAA,EAAE,EAAE;AAAErF,MAAAA,QAAQ,EAAE,CAAC,CAAC,CAAF,EAAK,GAAL,EAAU,IAAV,EAAgB,CAAhB;AAAZ,KAHN;AAIEsF,IAAAA,EAAE,EAAE,CACF;AAAEtF,MAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,GAAP,EAAY,CAAZ,EAAe,CAAf,CAAZ;AAA+B1D,MAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,CAAL;AAA3C,KADE,EAEF;AAAE0D,MAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAiB,IAAjB,CAAZ;AAAoC1D,MAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAhD;AAAyDuD,MAAAA,MAAM,EAAE;AAAjE,KAFE;AAJN,GAVqB,EAmBrB;AACEE,IAAAA,cAAc,EAAE;AAAEC,MAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,IAAP,EAAa,CAAb,CAAZ;AAA6B1D,MAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,CAAL;AAAzC,KADlB;AAEEa,IAAAA,UAAU,EAAE;AAAEb,MAAAA,UAAU,EAAE;AAAd,KAFd;AAGE+I,IAAAA,EAAE,EAAE;AAAErF,MAAAA,QAAQ,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,IAAR,EAAc,CAAd;AAAZ,KAHN;AAIEsF,IAAAA,EAAE,EAAE,CACF;AAAEtF,MAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,GAAP,EAAY,CAAZ,EAAe,CAAf,CAAZ;AAA+B1D,MAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,CAAL;AAA3C,KADE,EAEF;AAAE0D,MAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAiB,IAAjB,CAAZ;AAAoC1D,MAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAhD;AAAyDuD,MAAAA,MAAM,EAAE;AAAjE,KAFE;AAJN,GAnBqB,EA4BrB;AACEE,IAAAA,cAAc,EAAE;AAAEC,MAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,CAAd,CAAZ;AAA8B1D,MAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,EAAJ;AAA1C,KADlB;AAEEa,IAAAA,UAAU,EAAE;AAAEb,MAAAA,UAAU,EAAE;AAAd,KAFd;AAGE+I,IAAAA,EAAE,EAAE;AAAErF,MAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,CAAd,CAAZ;AAA8B1D,MAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,EAAJ;AAA1C,KAHN;AAIEgJ,IAAAA,EAAE,EAAE,CACF;AAAEtF,MAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,GAAP,EAAY,CAAZ,EAAe,CAAf,CAAZ;AAA+B1D,MAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,CAAL;AAA3C,KADE,EAEF;AAAE0D,MAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAiB,IAAjB,CAAZ;AAAoC1D,MAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAhD;AAAyDuD,MAAAA,MAAM,EAAE;AAAjE,KAFE;AAJN,GA5BqB,CAAvB;;AAuCA,WAAS0F,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,WAAO,UAAAC,KAAK,EAAI;AACd,UAAMC,MAAM,GAAGD,KAAK,CAACE,MAArB;AACA,UAAMjB,SAAS,GAAGS,UAAU,CAACK,KAAD,CAA5B;AACA,UAAMI,kBAAkB,GAAGF,MAAM,CAACG,OAAP,CAAeC,IAA1C;;AAEA,UAAIF,kBAAkB,KAAK,iBAA3B,EAA8C;AAC5CnB,QAAAA,oBAAoB,CAACC,SAAD,EAAYU,gBAAgB,CAACI,KAAD,CAAhB,CAAwBH,EAApC,CAApB;AACD,OAFD,MAEO,IAAIO,kBAAkB,KAAK,sBAA3B,EAAmD;AACxDd,QAAAA,gBAAgB,CAACJ,SAAD,EAAYU,gBAAgB,CAACI,KAAD,CAAhB,CAAwBF,EAApC,CAAhB;AACD,OAFM,MAEA;AACLZ,QAAAA,SAAS,CAACkB,kBAAD,CAAT,CACE5I,MAAM,CAACC,MAAP,CACE;AAAEV,UAAAA,OAAO,EAAE;AAAX,SADF,EAEE6I,gBAAgB,CAACI,KAAD,CAAhB,CAAwBI,kBAAxB,KAA+C,EAFjD,CADF;AAMD;AACF,KAjBD;AAkBD;;AAEDzC,EAAAA,QAAQ,GACLK,IADH,CACQ,YAAM;AACV,QAAIuC,MAAM,GAAG9F,KAAK,CAAC+F,IAAN,CAAWvE,QAAQ,CAACwE,gBAAT,CAA0B,kBAA1B,CAAX,CAAb;AACA,WAAO7C,OAAO,CAAC8C,GAAR,CAAYH,MAAM,CAACI,GAAP,CAAWzC,YAAX,CAAZ,CAAP;AACD,GAJH,EAKGF,IALH,CAKQ,UAAAuC,MAAM,EAAI;AACdZ,IAAAA,UAAU,GAAGY,MAAM,CAACI,GAAP,CAAW,UAAAzJ,GAAG;AAAA,aAAI,IAAID,kBAAJ,CAAcC,GAAd,EAAmB;AAAEJ,QAAAA,UAAU,EAAE;AAAd,OAAnB,CAAJ;AAAA,KAAd,CAAb;AAEA,QAAM8J,aAAa,GAAGnG,KAAK,CAAC+F,IAAN,CACpBvE,QAAQ,CAACwE,gBAAT,CAA0B,cAA1B,CADoB,CAAtB;;AAHc,+BAMLI,CANK;AAOZ,UAAM3B,SAAS,GAAGS,UAAU,CAACkB,CAAD,CAA5B;AACA,UAAMC,OAAO,GAAGF,aAAa,CAACC,CAAD,CAA7B;AACA,UAAME,OAAO,GAAGtG,KAAK,CAAC+F,IAAN,CAAWM,OAAO,CAACE,oBAAR,CAA6B,QAA7B,CAAX,CAAhB;AACAD,MAAAA,OAAO,CAACE,OAAR,CAAgB,UAAAC,CAAC;AAAA,eACfA,CAAC,CAACjD,gBAAF,CAAmB,OAAnB,EAA4B8B,cAAc,CAACc,CAAD,CAA1C,EAA+C,KAA/C,CADe;AAAA,OAAjB;AAVY;;AAMd,SAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlB,UAAU,CAAChF,MAA/B,EAAuCkG,CAAC,EAAxC,EAA4C;AAAA,YAAnCA,CAAmC;AAO3C;AACF,GAnBH;AAoBD,CAlFA,EAAD","file":"scripts.728e2e8f.map","sourceRoot":"../public","sourcesContent":["/*\n ** https://github.com/JamesNimlos/pixel-flow\n **\n ** Developed by\n ** - James Nimlos\n **\n ** Licensed under MIT license\n */\n\n'use strict'\n\n// utility functions\nfunction evenNum(num) {\n  if (typeof num !== 'number') return NaN\n  return ~~num - (~~num % 2)\n}\n\nfunction convPerc(percentage) {\n  return Number(percentage.replace(/[\\s%]/g, '')) / 100\n}\n\nvar defaultOptions = {\n  resolution: 16,\n  offsetX: 0,\n  offsetY: 0\n}\n\n/**\n * @param {HTMLImageElement} img\n * @param {Object} [options]\n */\nfunction PixelFlow(img, options) {\n  if (!(img instanceof HTMLImageElement))\n    return (\n      window.console &&\n      console.error('The provided element is not an HTMLImageElement.')\n    )\n\n  this.options = Object.assign({}, defaultOptions, options)\n\n  this.img = img\n\n  try {\n    this.setUpCanvas(img)\n\n    this.drawPixels()\n\n    // replace image with canvas\n    img.parentNode.replaceChild(this.canvas, img)\n  } catch (err) {\n    window.console && console.error('PixelFlow could not not be created.')\n    window.console && console.error(err)\n  }\n}\n\n/**\n * Factory function\n * @param  {HTMLImageElement} img\n * @param  {Object} opts\n * @return {PixelFlow}\n */\nPixelFlow.build = function(img, opts) {\n  return new PixelFlow(img, opts)\n}\n\n/**\n * Draws a full column on the canvas\n * @param  {number} left - pixel location of left side of column\n * @param  {number} colWidth - width of the column being drawn in pixels\n * @param  {number} [pixHeight] - height of each 'pixel' being drawn\n * @return {void}\n */\nPixelFlow.prototype.drawCol = function(left, colWidth, pixHeight) {\n  if (colWidth <= 2 || pixHeight <= 2) return\n  if (left + colWidth < 0) return\n  //local variables\n  var w = this.width\n  var h = this.height\n  var options = this.options\n  var res = colWidth\n  var resH = pixHeight || res\n  var offsetX = options.offestX\n  var offsetY = options.offsetY\n  var rows = h / resH + 1\n\n  var row\n  var x = left || 0\n  var y\n  var pixelY\n  var pixelX\n  var pixelIndex\n\n  // skip if outside canvas\n  if (x + res <= 0 || x >= w) return\n  // normalize x so shapes around edges get color\n  pixelX = Math.max(Math.min(x, w - 1), 0)\n\n  for (row = 0; row < rows; row++) {\n    y = (row - 0.5) * resH + offsetY\n    // normalize y so shapes around edges get color\n    pixelY = Math.max(Math.min(y, h - 1), 0)\n\n    pixelIndex = (pixelX + pixelY * w) * 4\n\n    this.drawPixel(pixelIndex, x, y, res, resH)\n  }\n}\n\n/**\n * Draws an individual block or 'pixel' on the canvas\n * @param  {number} pixelIndex - index of the pixel from the image data\n * @param  {number} x - horizontal position of the 'pixel' from left edge being 0\n * @param  {number} y - vertical position of the top left corner of the 'pixel'\n * @param  {number} w - width of the 'pixel'\n * @param  {number} h - height of the 'pixel'\n * @return {PixelFlow}\n */\nPixelFlow.prototype.drawPixel = function(pixelIndex, x, y, w, h) {\n  var ctx = this.ctx,\n    imgData = this.imgData,\n    red = imgData[pixelIndex],\n    green = imgData[pixelIndex + 1],\n    blue = imgData[pixelIndex + 2],\n    alpha = 1,\n    pixelAlpha = alpha * (imgData[pixelIndex + 3] / 255)\n\n  // sets the color using pixelIndex reference for the 'pixel'\n  ctx.fillStyle =\n    'rgba(' + red + ',' + green + ',' + blue + ',' + pixelAlpha + ')'\n\n  // draws pixel\n  ctx.fillRect(x, y, w, h)\n\n  return this\n}\n\n/**\n * Draws the entire pixelation using the current settings on the\n * PixelFlow instance. 'Pixel' size is constant throughout.\n * @return {PixelFlow}\n */\nPixelFlow.prototype.drawPixels = function(options) {\n  //local variables\n  options = Object.assign(this.options, options)\n  var w = this.width,\n    h = this.height,\n    ctx = this.ctx,\n    imgData = this.imgData,\n    res = options.resolution,\n    size = options.size || res,\n    alpha = 1,\n    offsetX = options.offsetX,\n    offsetY = options.offsetY,\n    cols = w / res + 1,\n    rows = h / res + 1,\n    halfSize = size / 2\n\n  if (res < 4) return this.rebase()\n\n  var row, col, x, y, pixelY, pixelX, pixelIndex, red, green, blue, pixelAlpha\n\n  for (row = 0; row < rows; row++) {\n    y = (row - 0.5) * res + offsetY\n    // normalize y so shapes around edges get color\n    pixelY = Math.max(Math.min(y, h - 1), 0)\n\n    for (col = 0; col < cols; col++) {\n      x = (col - 0.5) * res + offsetX\n      // normalize y so shapes around edges get color\n      pixelX = Math.max(Math.min(x, w - 1), 0)\n      pixelIndex = (pixelX + pixelY * w) * 4\n      red = imgData[pixelIndex + 0]\n      green = imgData[pixelIndex + 1]\n      blue = imgData[pixelIndex + 2]\n      pixelAlpha = alpha * (imgData[pixelIndex + 3] / 255)\n\n      ctx.fillStyle =\n        'rgba(' + red + ',' + green + ',' + blue + ',' + pixelAlpha + ')'\n\n      // square\n      ctx.fillRect(x - halfSize, y - halfSize, size, size)\n    } // col\n  } // row\n\n  return this\n}\n\n/**\n * Draws a linear, vertical gradient using the provided options\n * Example options object:\n * var options = {\n * \t\tresolution : [ 32, 0 ],\n * \t\tlocation : [ 0, 0.25, 0.75, 1]\n * }\n * This will generate a gradient that starts at size 32 pixels on the left\n * and will be that size until 25% of the way through the image, then it will\n * begin decreasing linearly until it should be normal resolution\n * (anything less than 4) at or just after 75% of the way throught the image.\n *\n * @param  {Object} options\n * @return {PixelFlow}\n */\nPixelFlow.prototype.linearGradient = function(options) {\n  // TODO: create a better default system.\n  options = Object.assign(\n    {},\n    this.options,\n    { location: [0, 0.25, 0.75, 1], resolution: [32, 0], rebase: true },\n    options\n  )\n\n  if (options.rebase) this.rebase()\n  // needs to wait until after a rebase\n  this.options = options\n\n  if (\n    !Array.isArray(options.location) ||\n    !Array.isArray(options.resolution) ||\n    options.location.length < 4 ||\n    options.resolution.length < 2\n  ) {\n    window.console &&\n      console.error(\n        'You have not provided the necessary options for a linear gradient.'\n      )\n    return this\n  }\n\n  var startRes = evenNum(options.resolution[0]),\n    endRes = evenNum(options.resolution[1]),\n    startPoint = options.location[0] || 0,\n    gradStart = options.location[1] || 0.25,\n    gradEnd = options.location[2] || 0.75,\n    endPoint = options.location[3] || 1,\n    offsetX = options.offsetX || this.offsetX || 0\n\n  if (typeof startPoint === 'string') startPoint = convPerc(startPoint)\n  if (typeof gradStart === 'string') gradStart = convPerc(gradStart)\n  if (typeof gradEnd === 'string') gradEnd = convPerc(gradEnd)\n  if (typeof endPoint === 'string') endPoint = convPerc(endPoint)\n\n  // calculate cols\n  var w = this.width\n\n  // points to pixels\n  startPoint *= w\n  gradStart *= w\n  gradEnd *= w\n  endPoint *= w\n\n  var cols = []\n  if (startRes > 0) cols.push(evenNum(startPoint))\n\n  // modify start points for best spacing\n  // gradStart -= (gradStart - startPoint) % startRes;\n  // gradEnd += endRes - (( endPoint - gradEnd ) % (endRes || 1));\n\n  // TODO: change this to a factory which could return an addColRange function\n  // using one of the different types between linear, exponential, bezier\n  function addColRange(arr, leftStart, startWidth, endWidth, rightEnd) {\n    if (rightEnd < leftStart) return\n\n    if (startWidth === endWidth) {\n      if (startWidth === 0) return\n\n      var place = leftStart\n      while (place <= rightEnd) {\n        place += startWidth\n        cols.push(evenNum(place)) // sub even pixels negatively affects presentation\n      }\n    } else {\n      var Rl = startWidth || 4 // in case resolution is zero\n      var Rs = endWidth || 4\n      var t = rightEnd - leftStart\n      // var mx = ( t / Rl );\n      // var mi = ( t / Rs );\n\n      // var mc = Math.floor( ( mx + mi ) / 2 );\n      // var s = 2 * ( t - ( mc * Rs ) ) / ( mc * ( mc + 1 ) );\n      var place = leftStart\n      var cWidth = startWidth\n      var exp\n\n      do {\n        // linear regression relationship but could be changed\n        // TODO: bezier curve regression\n        exp = Rl - (Rl - Rs) * ((place - leftStart) / t)\n        cWidth = exp\n        place += evenNum(cWidth)\n        cols.push(evenNum(place))\n      } while (place <= rightEnd && cWidth >= 2)\n    }\n  }\n  //calc cols from gradStart to startPoint\n  addColRange(cols, startPoint, startRes, startRes, gradStart)\n  addColRange(\n    cols,\n    cols[cols.length - 1] || gradStart,\n    startRes,\n    endRes,\n    gradEnd\n  )\n  addColRange(cols, cols[cols.length - 1], endRes, endRes, endPoint)\n\n  for (var c = 1; c < cols.length; c++) {\n    this.drawCol(cols[c - 1] + offsetX, cols[c] - cols[c - 1])\n  }\n\n  return this\n}\n\n/**\n * Returns the canvas to display the original image\n * @return {PixelFlow}\n */\nPixelFlow.prototype.rebase = function() {\n  this.options = {\n    resolution: 0,\n    offsetX: 0,\n    offsetY: 0\n  }\n\n  this.ctx.drawImage(this.img, 0, 0)\n\n  return this\n}\n\n/**\n * creates the canvas element and copies the image onto it\n * also creates a back-up canvas\n * @param {HTMLImageElement} img\n * @return {PixelFlow}\n */\nPixelFlow.prototype.setUpCanvas = function(img) {\n  // create canvas\n  var canvas = (this.canvas = document.createElement('canvas'))\n  this.ctx = canvas.getContext('2d')\n\n  //make virtual duplicate for safe keeping of picture data\n  this._copyCanvas = document.createElement('canvas')\n  this._copyCtx = this._copyCanvas.getContext('2d')\n\n  // copy basic attributes from img to canvas\n  canvas.className = img.className\n  canvas.id = img.id\n\n  var w = (this.width = this.canvas.width = this._copyCanvas.width =\n    img.naturalWidth % 2 === 0 ? img.naturalWidth : img.naturalWidth - 1)\n  var h = (this.height = this.canvas.height = this._copyCanvas.height =\n    img.naturalHeight % 2 === 0 ? img.naturalHeight : img.naturalHeight - 1)\n\n  // draw on both canvases\n  this.ctx.drawImage(img, 0, 0)\n  this._copyCtx.drawImage(img, 0, 0)\n\n  this.imgData = this._copyCtx.getImageData(0, 0, w, h).data\n\n  this.ctx.clearRect(0, 0, w, h)\n\n  return this\n}\n\n/**\n * @param  {number} endResolution - resolution to stop the animation at\n * @param  {number} duration - length of the animation\n * @return {PixelFlow}\n */\nPixelFlow.prototype.simpleanimate = function(endResolution, duration) {\n  var er = evenNum(endResolution)\n  // if end resolution is the same as the start then exit\n  if (this.options.resolution === er) return\n  var startRes = this.options.resolution\n  var res = startRes\n  var startTime = Date.now()\n  var elapsed = 0\n  var dur = duration\n\n  var PixelFlowAnimationLoop = function() {\n    var time = Date.now()\n\n    res = startRes + (er - startRes) * ((time - startTime) / duration)\n\n    res = evenNum(res)\n\n    if (res >= 2) {\n      // since we only run for even numbers this happens\n      // during long animations\n      if (this.options.resolution !== res) {\n        this.update({ resolution: evenNum(res) })\n      }\n    } else {\n      this.rebase({})\n    }\n\n    if ((er > startRes && res < er) || (er < startRes && res > er)) {\n      window.requestAnimationFrame(PixelFlowAnimationLoop)\n    }\n  }.bind(this)\n\n  window.requestAnimationFrame(PixelFlowAnimationLoop)\n\n  return this\n}\n\n/**\n * updates the canvas with the new options for resolution\n * @param  {Object} options - options to update the canvas with\n * @return {PixelFlow}\n */\nPixelFlow.prototype.update = function(options) {\n  Object.assign(this.options, options)\n\n  this.options.resolution = evenNum(this.options.resolution)\n\n  this.drawPixels()\n\n  return this\n}\n\nexport default PixelFlow\n","import PixelFlow from '../../src/pixel-flow.js'\n\nfunction domReady() {\n  return new Promise(resolve => {\n    if (\n      document.readyState === 'interactive' ||\n      document.readystate === 'completed'\n    ) {\n      Promise.resolve().then(resolve)\n    } else {\n      document.addEventListener('DOMContentLoaded', () => resolve())\n    }\n  })\n}\n\nfunction waitForImage(img) {\n  return new Promise(function(resolve, reject) {\n    var imgObj = new Image()\n    imgObj.onload = function() {\n      resolve(img)\n    }\n    imgObj.onerror = function() {\n      reject()\n    }\n    imgObj.src = img.src\n  })\n}\n\nfunction runAnimation(tick, duration) {\n  duration = duration * 1000\n  const start = Date.now()\n  function ticker() {\n    const now = Date.now()\n    const completionRatio = (now - start) / duration\n    if (completionRatio >= 1) {\n      tick(1)\n    } else {\n      tick(completionRatio)\n      window.requestAnimationFrame(ticker)\n    }\n  }\n  window.requestAnimationFrame(ticker)\n}\n\nfunction easeOutQuad(t) {\n  return t * (2 - t)\n}\n\nfunction easeInOutQuad(ratio) {\n  return ratio < 0.5 ? 2 * ratio * ratio : -1 + (4 - 2 * ratio) * ratio\n}\n\nfunction runGradientAnimation(pixelFlow, options) {\n  const startOffsetX = pixelFlow.width\n  runAnimation(ratioComplete => {\n    const offsetX = Math.round(\n      startOffsetX - startOffsetX * easeOutQuad(ratioComplete)\n    )\n    pixelFlow.linearGradient(Object.assign({ offsetX }, options))\n  }, 2)\n}\n\n// runs across to right, then back left\nfunction runWaveAnimation(pixelFlow, [optionsLeft, optionsRight]) {\n  const width = pixelFlow.width\n  runAnimation(ratioComplete => {\n    const offsetMultiplier = -easeInOutQuad(Math.abs(ratioComplete - 0.5) * 2)\n    const offsetX = Math.round(width * offsetMultiplier)\n    pixelFlow.linearGradient(Object.assign({ offsetX }, optionsLeft))\n    pixelFlow.linearGradient(Object.assign({ offsetX }, optionsRight))\n  }, 4)\n}\n\n!(function() {\n  let pixelFlows\n  var transformOptions = [\n    {\n      linearGradient: { location: [0, 0, 0.65, 1], resolution: [32, 0] },\n      drawPixels: { resolution: 16, offsetY: 6 },\n      lg: { location: [-1, 0, 0.65, 1] },\n      wg: [\n        { location: [0.85, 0.9, 1, 1], resolution: [16, 0] },\n        { location: [0.7, 0.7, 0.85, 0.85], resolution: [0, 16], rebase: false }\n      ]\n    },\n    {\n      linearGradient: { location: [0, 0.1, 0.5, 1], resolution: [32, 0] },\n      drawPixels: { resolution: 8 },\n      lg: { location: [-1, 0.1, 0.45, 1] },\n      wg: [\n        { location: [0.85, 0.9, 1, 1], resolution: [16, 0] },\n        { location: [0.7, 0.7, 0.85, 0.85], resolution: [0, 16], rebase: false }\n      ]\n    },\n    {\n      linearGradient: { location: [0, 0, 0.48, 1], resolution: [32, 0] },\n      drawPixels: { resolution: 6 },\n      lg: { location: [-1, 0, 0.48, 1] },\n      wg: [\n        { location: [0.85, 0.9, 1, 1], resolution: [16, 0] },\n        { location: [0.7, 0.7, 0.85, 0.85], resolution: [0, 16], rebase: false }\n      ]\n    },\n    {\n      linearGradient: { location: [0, 0.5, 0.9, 1], resolution: [0, 32] },\n      drawPixels: { resolution: 32 },\n      lg: { location: [0, 0.5, 0.9, 1], resolution: [0, 32] },\n      wg: [\n        { location: [0.85, 0.9, 1, 1], resolution: [16, 0] },\n        { location: [0.7, 0.7, 0.85, 0.85], resolution: [0, 16], rebase: false }\n      ]\n    }\n  ]\n\n  function buttonListener(index) {\n    return event => {\n      const button = event.target\n      const pixelFlow = pixelFlows[index]\n      const requestedTransform = button.dataset.func\n\n      if (requestedTransform === 'animateGradient') {\n        runGradientAnimation(pixelFlow, transformOptions[index].lg)\n      } else if (requestedTransform === 'animateGradient_wave') {\n        runWaveAnimation(pixelFlow, transformOptions[index].wg)\n      } else {\n        pixelFlow[requestedTransform](\n          Object.assign(\n            { offsetX: 0 },\n            transformOptions[index][requestedTransform] || {}\n          )\n        )\n      }\n    }\n  }\n\n  domReady()\n    .then(() => {\n      let images = Array.from(document.querySelectorAll('.img-wrapper img'))\n      return Promise.all(images.map(waitForImage))\n    })\n    .then(images => {\n      pixelFlows = images.map(img => new PixelFlow(img, { resolution: 32 }))\n\n      const imageWrappers = Array.from(\n        document.querySelectorAll('.img-wrapper')\n      )\n      for (let i = 0; i < pixelFlows.length; i++) {\n        const pixelFlow = pixelFlows[i]\n        const imgWrap = imageWrappers[i]\n        const buttons = Array.from(imgWrap.getElementsByTagName('button'))\n        buttons.forEach(b =>\n          b.addEventListener('click', buttonListener(i), false)\n        )\n      }\n    })\n})()\n"]}